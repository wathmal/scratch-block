{	"extensionName": "node-mcu",
	"sort":1,
	"extensionPort": 0,
	"firmware":"1.1.103",
	"javascriptURL":"js/nodemcu.js",
	"blockSpecs": [
		["h","start","runArduino"],

        ["w", "set wifi %s and %s","configWifi","name","password",
		{"encode":"{d0}","setup":"","inc":"","def":"","work":"","loop":"","wifi":"wifi.sta.config({0}, {1})\n", "mqtt":""}],

		["R", "get temperature from %d.sockets socket" ,"getDHTT","red",
		{"encode":"{d0}","setup":"x,temperature,humidity = dht.read({0})\n","inc":"x,temperature,humidity = dht.read({0})\n","def":"","work":"temperature","loop":"", "wifi":"", "mqtt":""}],

		["R", "get humidity from %d.sockets socket" ,"getDHTH","green",
        {"encode":"{d0}","setup":"x,temperature,humidity = dht.read({0})\n","inc":"x,temperature,humidity = dht.read({0})\n","def":"","work":"humidity","loop":"", "wifi":"", "mqtt":""}],

		["R", "get temperature from %d.sockets DH18B20" ,"getTemp","blue",
        {"encode":"{d0}","setup":"t.setup({d0})","inc":"","def":"","work":"t.read()","loop":"", "wifi":"", "mqtt":""}],
        
        ["w", "switch %d.state device at %d.sockets socket" ,"switchDigital", "ON", "red",
        {"encode":"{d0}{d1}","setup":"gpio.mode({1},gpio.OUTPUT)\n","inc":"","def":"","work":"gpio.write({1},{0})\n","loop":"","wifi":"", "mqtt":""}],
        
        ["w", "illumination : %s % at %d.sockets socket" ,"switchPwm", "50", "red",
        {"encode":"{s0}{d1}","setup":"","inc":"","def":"","work":"pwm.setup({1},500,{0}*10)\n pwm.start({1})\n","loop":"","wifi":"", "mqtt":""}],

        ["w", "send to dashboard : %s as %d.topics","sendToServer", "","temperature",
        {"encode":"{s0}{d1}","setup":"","inc":"","def":"","work":"","loop":"","wifi":"", "mqtt":""}],
        
        ["w", "control switch at %d.sockets via %d.topics ","mqttSubSwitch","red","switch",
        {"encode":"{d0}","setup":"gpio.mode({0},gpio.OUTPUT)\n"
        ,"inc":""
        ,"def":"m:subscribe(mqtt_username..\"\/\"..{1},0, function(client) print({1}..\" subscribe success\") end)\n","work":"","loop":"","wifi":""
        ,"mqtt":"if topic == mqtt_username..\"\/\"..{1} then\n\tif cjson.decode(data).value == true then gpio.write({0},1) \nelse gpio.write({0},0) end \nend\n"}],
        
        ["w", "control dimmer at %d.sockets via %d.topics ","mqttSubDimmer","green","dimmer",
        {"encode":"{d0}","setup":""
        ,"inc":""
        ,"def":"m:subscribe(mqtt_username..\"\/\"..{1},0, function(client) print({1}..\" subscribe success\") end)\n","work":"","loop":"","wifi":""
        ,"mqtt":"if topic == mqtt_username..\"\/\"..{1} then\n\tif cjson.decode(data).value > 0 then pwm.setup({0},500,cjson.decode(data).value*10)\n pwm.start({0})\nelse pwm.stop({0}) end \nend\n"}],
        
        ["c", "if %s is %d.opr %s","mqttIf","dimmer",">","100",
        {"encode":"","setup":""
        ,"inc":""
        ,"def":"m:subscribe(mqtt_username..\"\/\"..{0},0, function(client) print({0}..\" subscribe success\") end)\n","work":"","loop":"","wifi":""
        ,"mqtt":"if topic == mqtt_username..\"\/\"..{1} then\n\tif cjson.decode(data).value > 0 then pwm.setup({0},500,cjson.decode(data).value*10)\n pwm.start({0})\nelse pwm.stop({0}) end \nend\n"}]
        
	],
	"menus": {
		"digital":["HIGH","LOW"],
        "inputs": ["0","1","2","3","8"],
		"pins":["0", "1", "2", "3","8"],
		"state":["ON", "OFF"],
		"types":["Temperature", "Motion"],
		"opr": [">","==","<"],
		"sockets": ["red","green","blue"],
		"topics": ["temperature","humidity","switch","dimmer"]
	},
	"values":{
		"run":2,
		"get":1,
		"digital":30,
		"analog":31,
		"pwm":32,
		"servo_pin":33,
		"timer":50,
		"HIGH":1,"LOW":0,
		"ON":1,"OFF":0,
		"1":1, "2":2, "3":3,
		"red":1,"green":8,"blue":0
	},
	"translators":{
	}
}