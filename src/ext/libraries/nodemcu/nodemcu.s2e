{	"extensionName": "node-mcu",
	"sort":1,
	"extensionPort": 0,
	"firmware":"1.1.103",
	"javascriptURL":"js/nodemcu.js",
	"blockSpecs": [
		["h","start","runArduino"],

        ["w", "configure wifi %s and %s","configWifi","name","password",
		{"encode":"{d0}","setup":"","inc":"","def":"","work":"","loop":"","wifi":"wifi.sta.config({0}, {1})\n", "mqtt":""}],

		["R", "get temperature from socket %d.inputs","getDHT","1",
		{"encode":"{d0}","setup":"","inc":"","def":"","work":"selectindx(2, dht.read({0}))","loop":"", "wifi":"", "mqtt":""}],

		["R", "get humidity from socket %d.inputs","getDHT","1",
        {"encode":"{d0}","setup":"","inc":"","def":"","work":"selectindx(3, dht.read({0}))","loop":"", "wifi":"", "mqtt":""}],

        ["w", "switch %d.state device at socket %d.pins","switchDigital", "ON", "1",
        {"encode":"{d0}{d1}","setup":"gpio.mode({1},gpio.OUTPUT)\n","inc":"","def":"","work":"gpio.write({1},{0})\n","loop":"","wifi":"", "mqtt":""}],

        ["w", "switch LED %d.state on socket %d.pins","switchDigital", "ON", "1",
        {"encode":"{d0}{d1}","setup":"gpio.mode({1},gpio.OUTPUT)\n","inc":"","def":"","work":"gpio.write({1},{0})\n","loop":"","wifi":"", "mqtt":""}],

        ["w", "set %d.state  buzzer on socket %d.pins","switchDigital", "ON", "1",
        {"encode":"{d0}{d1}","setup":"gpio.mode({1},gpio.OUTPUT)\n","inc":"","def":"","work":"gpio.write({1},{0})\n","loop":"","wifi":"", "mqtt":""}],

        ["w", "send value : %s as %s","sendToServer", "","temp",
        {"encode":"{s0}{d1}","setup":"","inc":"","def":"","work":"","loop":"","wifi":"", "mqtt":""}],
        
        ["w", "control device at %d.pins by cloud switch %s ","mqttSubSwitch","2","switch",
        {"encode":"{d0}","setup":"gpio.mode({0},gpio.OUTPUT)\n"
        ,"inc":"m:subscribe(mqtt_username..\"\/\"..{1},0, function(client) print({1}..\" subscribe success\") end)\n"
        ,"def":"","work":"","loop":"","wifi":""
        ,"mqtt":"if topic == mqtt_username..\"\/\"..{1} then\n\tif cjson.decode(data).value == true then gpio.write({0},1) \nelse gpio.write({0},0) end \nend\n"}],
        
        ["w", "control device at %d.pins by cloud dimmer %s ","mqttSubDimmer","1","dimmer",
        {"encode":"{d0}","setup":""
        ,"inc":"m:subscribe(mqtt_username..\"\/\"{1},0, function(client) print({1}..\" subscribe success\") end)\n"
        ,"def":"","work":"","loop":"","wifi":""
        ,"mqtt":"if topic == mqtt_username..\"\/\"..{1} then\n\tif cjson.decode(data).value > 0 then pwm.setup({0},500,cjson.decode(data).value*10)\n pwm.start({0})\nelse pwm.stop({0}) end \nend\n"}]
        
	],
	"menus": {

		"digital":["HIGH","LOW"],
        "inputs": ["1","2","3"],
		"pins":["0", "1", "2", "3"],
		"state":["ON", "OFF"],
		"types":["Temperature", "Motion"]
	},
	"values":{
		"run":2,
		"get":1,
		"digital":30,
		"analog":31,
		"pwm":32,
		"servo_pin":33,
		"tone":34,
		"timer":50,
		"HIGH":1,"LOW":0,
		"ON":1,"OFF":0,
		"1":1, "2":2, "3":3
		
	},
	"translators":{
	}
}